parameters:
# The name of the service connection for deployment.
- name: AzureSubscription
  type: string
# The name of the container app to deploy.
- name: AppName
  type: string
# The name of the folder under src containing the Dockerfile.
- name: ProjectFolder
  type: string
# If true, additional debugging will be enabled.
- name: AdditionalDebugging
  type: boolean
  default: false
# Skip deployment if false.
- name: DeployApp
  type: boolean
  default: true

steps:
- task: AzureCLI@2
  displayName: Deploy ${{ parameters.AppName }}
  condition: and(succeeded(), eq('${{ parameters.DeployApp }}', true))
  inputs:
    azureSubscription: ${{ parameters.AzureSubscription }}
    workingDirectory: $(Build.SourcesDirectory)/efs/src/UKHO.ADDS.EFS.LocalHost
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      set -e
      echo "Setting variables..."
      DEPLOYMENT_NUMBER=$EPOCHSECONDS
      DEPLOYMENT_TAG=docker-deploy-$DEPLOYMENT_NUMBER
      echo "Deployment tag - $DEPLOYMENT_TAG"
      export CONTAINER_IMAGE="$(AcrName).azurecr.io/exchange-set-fulfilment-service/${{ parameters.AppName }}-$(AZURE_ENV_NAME):$DEPLOYMENT_TAG"
      RESOURCE_GROUP="efs-$(AZURE_ENV_NAME)-rg"

      echo "Reading azd variables..."
      while IFS='=' read -r key value; do
          value=$(echo "$value" | sed 's/^"//' | sed 's/"$//')
          export "$key=$value"
      done <<EOF
      $(azd env get-values)
      EOF

      if [ "${{ parameters.AdditionalDebugging }}" == "True" ]; then
        echo "Current environment variables:"
        echo "--------------------------------------------------------------------------------"
        env | sort
        echo "--------------------------------------------------------------------------------"
      fi

      echo "Logging in to Azure Container Registry..."
      az acr login --name $(AcrName)

      echo "Changing directory..."
      cd $(Build.SourcesDirectory)/efs/src

      echo "Building Docker image..."
      docker build -t $CONTAINER_IMAGE -f ${{ parameters.ProjectFolder }}/Dockerfile-Release .

      echo "Pushing Docker image to Azure Container Registry..."
      docker push $CONTAINER_IMAGE

      echo "Deploying app job..."
      cd "$(Build.SourcesDirectory)/efs/src/UKHO.ADDS.EFS.LocalHost/infra/${{ parameters.AppName }}"

      if [ "${{ parameters.AdditionalDebugging }}" == "True" ]; then
        az deployment group create --name ${{ parameters.AppName }}-$DEPLOYMENT_NUMBER --resource-group $RESOURCE_GROUP --parameters ${{ parameters.AppName }}.tmpl.bicepparam --debug
      else
        az deployment group create --name ${{ parameters.AppName }}-$DEPLOYMENT_NUMBER --resource-group $RESOURCE_GROUP --parameters ${{ parameters.AppName }}.tmpl.bicepparam
      fi
  env:
    EFS_STORAGE_CONNECTION_STRING: $(EFS_STORAGE_CONNECTION_STRING)
    FSS_ENDPOINT: $(FSS_ENDPOINT)
    FSS_ENDPOINT_HEALTH: $(FSS_ENDPOINT_HEALTH)
    MAX_RETRY_ATTEMPTS: $(MAX_RETRY_ATTEMPTS)
    RETRY_DELAY_MS: $(RETRY_DELAY_MS)
