jobs:
- job: BuildADDSMockService
  workspace:
    clean: all
  displayName: "Dotnet Build ADDS Mock Service"
  steps:

    - checkout: self
      submodules: true

    - task: UseDotNet@2
      displayName: Use .NET SDK $(SdkVersion)
      inputs:
        packageType: sdk
        version: $(SdkVersion)
              
    - task: DotNetCoreCLI@2
      displayName: ".Net Core - NuGet restore for non test projects only"
      inputs:
        command: "restore"
        projects: '**/*ADDSMock.csproj'
        feedsToUse: config
        noCache: true
        nugetConfigPath: '$(Build.SourcesDirectory)\mock\repo\BuildNuget.config'
        workingDirectory: '$(Build.SourcesDirectory)\mock\repo\src\ADDSMock'
        packagesDirectory: '$(Build.SourcesDirectory)\repo\packages'

    - task: DotNetCoreCLI@2
      displayName: "Dotnet build task"
      inputs:
        command: "build"
        projects: '**/*ADDSMock.csproj'
        arguments: '--configuration $(BuildConfiguration)'

- job: UnitTestsAndCodeCoverage
  workspace:
          clean: all
  displayName: "Dotnet Test and Publish Code Coverage"
  steps:
    - task: UseDotNet@2
      displayName: Use .NET SDK $(SdkVersion)
      inputs:
        packagetype: sdk
        version: $(SdkVersion)
        useglobaljson: true
         
    - task: DotNetCoreCLI@2
      displayName: ".Net Core - NuGet restore test projects only"
      inputs:
        command: "restore"
        projects: "**/*Tests.csproj"
        feedsToUse: config
        noCache: true
        nugetConfigPath: '$(Build.SourcesDirectory)\mock\repo\BuildNuget.config'
        workingDirectory: '$(Build.SourcesDirectory)'
        packagesDirectory: '$(Build.SourcesDirectory)\packagesForTests'

    - task: DotNetCoreCLI@2
      displayName: "Dotnet test - EFS Orchestrator Unit Tests"
      inputs:
        command: "test"
        projects: '**/UKHO.ADDS.EFS.Orchestrator.UnitTests.csproj'
        arguments: '--configuration $(BuildConfiguration) --settings "$(Build.SourcesDirectory)\test.runsettings" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
        #publishTestResults: true
        testRunTitle: "UnitTests for EFS Orchestrator"

    - task: PublishTestResults@2
      displayName: "Publish Test Results"
      inputs:
        testResultsFiles: '**/TestResults/*.trx'
        searchFolder: '$(Build.SourcesDirectory)'
        testRunTitle: "UnitTests for EFS Orchestrator"

    - task: publishcodecoverageresults@2
      displayName: "publish code coverage report for build quality checks"
      inputs:
        summaryfilelocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'              
        failIfCoverageEmpty: true

    - task: PowerShell@2
      displayName: "Generate code coverage report"
      inputs:
        targetType: filePath
        filePath: '$(Build.SourcesDirectory)\CodeCoverageReport.ps1'
        arguments: '-source "$(Build.SourcesDirectory)" -reportFolder "$(Build.ArtifactStagingDirectory)"'

    - task: PublishBuildArtifacts@1
      displayName: "Publish Code coverage"
      inputs:
        PathtoPublish: "$(Build.ArtifactStagingDirectory)/codecoveragereport"
        ArtifactName: codecoveragereport

