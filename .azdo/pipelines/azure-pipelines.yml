name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd).$(BuildCounter)

parameters:
  - name: DisableStryker
    displayName: "Disable Stryker"
    type: boolean
    default: true
  - name: DestroyResourcesDev
    displayName: "Destroy dev environment"
    type: boolean
    default: false
  - name: SnykOnlyFailIfFixable
    displayName: "Snyk - fail only if an issue has an available fix"
    type: boolean
    default: false
  - name: SnykPassOnIssues
    displayName: "Snyk - don't fail if issues found"
    type: boolean
    default: false
  - name: SkipDeployment
    displayName: "Skip deployment (temporary until dev deployment works)"
    type: boolean
    default: false
  - name: AzdDebug
    displayName: "Debug azd"
    type: boolean
    default: false

trigger:
  - main

pool: NautilusBuild

variables:
  - name: BuildConfiguration
    value: "Release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UkhoAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UkhoAssemblyVersionPrefix
    value: "1.0."
  - name: UkhoAssemblyProduct
    value: "ESS Fulfilment Service"
  - name: UKHOAssemblyCopyright
    value: "Copyright © UK Hydrographic Office"
  - name: SdkVersion
    value: "9.0.x"
  - name: WindowsPool
    value: "Mare Nubium"
  - name: LinuxPool
    value: "Mare Nectaris"
  - name: snykAbzuOrganizationId
    value: aeb7543b-8394-457c-8334-a31493d8910d

stages:
  # - stage: VulnerabilityChecks
  #   displayName: "Snyk Checks"
  #   dependsOn: []
  #   jobs:
  #   - template: templates/vulnerability-checks.yml
  #     parameters:
  #       SnykOnlyFailIfFixable: ${{ parameters.SnykOnlyFailIfFixable }}
  #       SnykPassOnIssues: ${{ parameters.SnykPassOnIssues }}

  - stage: Stryker_Mutator
    displayName: "Stryker Mutator"
    condition: eq('${{ parameters.DisableStryker }}', false)
    dependsOn: []
    jobs:
    - job: Stryker
      workspace:
        clean: all
      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK for Stryker'
          inputs:
            packageType: sdk
            version: $(SdkVersion)

        - task: DotNetCoreCLI@2
          displayName: "Install Stryker"
          inputs:
            command: custom
            custom: tool
            workingDirectory: $(Agent.TempDirectory)
            arguments: install dotnet-stryker --tool-path $(Agent.BuildDirectory)/tools

        - task: Powershell@2
          displayName: "Run Stryker for EFS Orchestrator UnitTests"
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Orchestrator.UnitTests'
            targetType: 'inline'
            pwsh: true
            script: $(Agent.BuildDirectory)/tools/dotnet-stryker --test-project $(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Orchestrator.UnitTests/UKHO.ADDS.EFS.Orchestrator.UnitTests.csproj

        - task: PublishMutationReport@0
          displayName: 'Publish Strkyer Mutator Report'
          inputs:
            reportPattern: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Orchestrator.UnitTests/**/mutation-report.html'
            reportDisplayName: 'EFS Orchestrator UnitTests'

        - task: Powershell@2
          displayName: "Run Stryker for EFS Builder S100 UnitTests"
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Builder.S100.UnitTests'
            targetType: 'inline'
            pwsh: true
            script: $(Agent.BuildDirectory)/tools/dotnet-stryker --test-project $(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Builder.S100.UnitTests/UKHO.ADDS.EFS.Builder.S100.UnitTests.csproj

        - task: PublishMutationReport@0
          displayName: 'Publish Strkyer Mutator Report'
          inputs:
            reportPattern: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Builder.S100.UnitTests/**/mutation-report.html'
            reportDisplayName: 'EFS Builder S100 UnitTests'

  # - stage: Test
  #   displayName: Test
  #   dependsOn: []
  #   jobs:
  #   - template: templates/test.yml

  - stage: DevDeploy
    dependsOn: []
    #- VulnerabilityChecks
    #- Test
    displayName: Dev deploy
    condition: eq('${{ parameters.SkipDeployment }}', false)
    jobs:
    - template: templates/continuous-deployment.yml
      parameters:
        AzureDevOpsEnvironment: Ess-Dev
        ShortName: dev
        DestroyResources: ${{ parameters.DestroyResourcesDev }}
        AzdDebug: ${{ parameters.AzdDebug }}
