name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd).$(BuildCounter)

parameters:
  - name: DisableStryker
    displayName: "Disable Stryker"
    type: boolean
    default: false
  - name: SnykOnlyFailIfFixable
    displayName: "Snyk - fail only if an issue has an available fix"
    type: boolean
    default: false
  - name: SnykPassOnIssues
    displayName: "Snyk - don't fail if issues found"
    type: boolean
    default: false
  - name: DeployOrchestrator
    displayName: "Deploy orchestrator"
    type: boolean
    default: true
  - name: DeployBuilderS100
    displayName: "Deploy S100 builder"
    type: boolean
    default: true
  - name: DeployAddsMock
    displayName: "Deploy ADDS mock"
    type: boolean
    default: true
  - name: DeployRedis
    displayName: "Deploy Redis"
    type: boolean
    default: true
  - name: WaitForContainersAfterDeploy
    displayName: "Wait for containers after deployment (temporary option)"
    type: boolean
    default: false
  - name: AdditionalDebugging
    displayName: "Enable optional pipeline debugging"
    type: boolean
    default: false
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    displayName: "Continue even if resources are getting destroyed"
    type: boolean
    default: false
  - name: DeployApim
    displayName: "Deploy APIM"
    type: boolean
    default: true

trigger:
  - main

pool: NautilusBuild

variables:
  - name: BuildConfiguration
    value: "Release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UkhoAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UkhoAssemblyVersionPrefix
    value: "1.0."
  - name: UkhoAssemblyProduct
    value: "ESS Fulfilment Service"
  - name: UKHOAssemblyCopyright
    value: "Copyright ï¿½ UK Hydrographic Office"
  - name: SdkVersion
    value: "9.0.x"
  - name: WindowsPool
    value: "Mare Nubium"
  - name: LinuxPool
    value: "Mare Nectaris"
  - name: snykAbzuOrganizationId
    value: aeb7543b-8394-457c-8334-a31493d8910d
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell-unzip:1.13.0"

resources:
  repositories:
  - repository: PrivateEfs
    endpoint: UKHO
    name: UKHO/exchange-set-fulfilment-service-pvt
    ref: refs/heads/main
    type: github

stages:
  - stage: VulnerabilityChecks
    displayName: "Snyk Checks"
    dependsOn: []
    jobs:
    - template: templates/vulnerability-checks.yml
      parameters:
        SnykOnlyFailIfFixable: ${{ parameters.SnykOnlyFailIfFixable }}
        SnykPassOnIssues: ${{ parameters.SnykPassOnIssues }}

  - stage: Stryker_Mutator
    displayName: "Stryker Mutator"
    condition: eq('${{ parameters.DisableStryker }}', false)
    dependsOn: []
    jobs:
    - job: Stryker
      workspace:
        clean: all
      steps:
        - checkout: self
          clean: true

        - script: git submodule update --init --recursive
          displayName: Restore mock submodule
          workingDirectory: '$(Build.SourcesDirectory)'

        - task: UseDotNet@2
          displayName: 'Use .NET SDK for Stryker'
          inputs:
            packageType: sdk
            version: $(SdkVersion)

        - task: DotNetCoreCLI@2
          displayName: "Install Stryker"
          inputs:
            command: custom
            custom: tool
            workingDirectory: $(Agent.TempDirectory)
            arguments: install dotnet-stryker --tool-path $(Agent.BuildDirectory)/tools

        - task: Powershell@2
          displayName: "Run Stryker for EFS Orchestrator UnitTests"
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Orchestrator.UnitTests'
            targetType: 'inline'
            pwsh: true
            script: $(Agent.BuildDirectory)/tools/dotnet-stryker --test-project $(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Orchestrator.UnitTests/UKHO.ADDS.EFS.Orchestrator.UnitTests.csproj --project UKHO.ADDS.EFS.Orchestrator.csproj

        - task: PublishMutationReport@0
          displayName: 'Publish Strkyer Mutator Report'
          inputs:
            reportPattern: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Orchestrator.UnitTests/**/mutation-report.html'
            reportDisplayName: 'EFS Orchestrator UnitTests'

        - task: Powershell@2
          displayName: "Run Stryker for EFS Builder S100 UnitTests"
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Builder.S100.UnitTests'
            targetType: 'inline'
            pwsh: true
            script: $(Agent.BuildDirectory)/tools/dotnet-stryker --test-project $(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Builder.S100.UnitTests/UKHO.ADDS.EFS.Builder.S100.UnitTests.csproj --project UKHO.ADDS.EFS.Builder.S100.csproj

        - task: PublishMutationReport@0
          displayName: 'Publish Strkyer Mutator Report'
          inputs:
            reportPattern: '$(Build.SourcesDirectory)/test/UKHO.ADDS.EFS.Builder.S100.UnitTests/**/mutation-report.html'
            reportDisplayName: 'EFS Builder S100 UnitTests'

  - stage: Test
    displayName: Test
    dependsOn: []
    jobs:
    - template: templates/test.yml

  - stage: DevDeploy
    dependsOn:
    - VulnerabilityChecks
    - Test
    displayName: Dev deploy
    jobs:
    - template: templates/continuous-deployment.yml
      parameters:
        AzureDevOpsEnvironment: Ess-Dev
        ShortName: dev
        AdditionalDebugging: ${{ parameters.AdditionalDebugging }}
        DeployOrchestrator: ${{ parameters.DeployOrchestrator }}
        DeployBuilderS100: ${{ parameters.DeployBuilderS100 }}
        DeployAddsMock: ${{ parameters.DeployAddsMock }}
        IncludeAddsMock: true
        DeployRedis: ${{ parameters.DeployRedis }}
        WaitForContainersAfterDeploy: ${{ parameters.WaitForContainersAfterDeploy }}

  # - stage: vnextiatDeploy
  #   dependsOn:
  #  # - DevDeploy
  #   displayName: vNext IAT Deploy
  #   #condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/dev/')))
  #   jobs:
  #   # - template: templates/continuous-deployment.yml
  #   #   parameters:
  #   #     AzureDevOpsEnvironment: Ess-vnextiat
  #   #     ShortName: vnextiat
  #   #     AdditionalDebugging: ${{ parameters.AdditionalDebugging }}
  #   #     DeployOrchestrator: ${{ parameters.DeployOrchestrator }}
  #   #     DeployBuilderS100: ${{ parameters.DeployBuilderS100 }}
  #   #     DeployAddsMock: ${{ parameters.DeployAddsMock }}
  #   #     IncludeAddsMock: false
  #   #     DeployRedis: ${{ parameters.DeployRedis }}
  #   #     WaitForContainersAfterDeploy: ${{ parameters.WaitForContainersAfterDeploy }}

  #   - template: templates/continuous-deployment-apim.yml
  #     parameters:
  #         AzureDevOpsEnvironment: Ess-vnextiat
  #         ShortName: vnextiat
  #         DeployApim: ${{ parameters.DeployApim }}
  #         ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
  #         ContainerImage: ${{ variables.Container }}

  - stage: vnexte2eDeploy
    dependsOn: []
   # - vnextiatDeploy
    displayName: vNext E2E Deploy
   # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
    - template: templates/continuous-deployment.yml
      parameters:
        AzureDevOpsEnvironment: Ess-vnexte2e
        ShortName: vnexte2e
        AdditionalDebugging: ${{ parameters.AdditionalDebugging }}
        DeployOrchestrator: ${{ parameters.DeployOrchestrator }}
        DeployBuilderS100: ${{ parameters.DeployBuilderS100 }}
        DeployAddsMock: ${{ parameters.DeployAddsMock }}
        IncludeAddsMock: false
        DeployRedis: ${{ parameters.DeployRedis }}
        WaitForContainersAfterDeploy: ${{ parameters.WaitForContainersAfterDeploy }}

    - template: templates/continuous-deployment-apim.yml
      parameters:
          AzureDevOpsEnvironment: Ess-vnexte2e
          ShortName: vnexte2e
          DeployApim: ${{ parameters.DeployApim }}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          ContainerImage: ${{ variables.Container }}

  - stage: iatDeploy
    dependsOn: []
    - DevDeploy
    displayName: IAT Deploy
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
    jobs:
    - template: templates/continuous-deployment.yml
      parameters:
        AzureDevOpsEnvironment: Ess-iat
        ShortName: iat
        AdditionalDebugging: ${{ parameters.AdditionalDebugging }}
        DeployOrchestrator: ${{ parameters.DeployOrchestrator }}
        DeployBuilderS100: ${{ parameters.DeployBuilderS100 }}
        DeployAddsMock: ${{ parameters.DeployAddsMock }}
        IncludeAddsMock: false
        DeployRedis: ${{ parameters.DeployRedis }}
        WaitForContainersAfterDeploy: ${{ parameters.WaitForContainersAfterDeploy }}

    - template: templates/continuous-deployment-apim.yml
      parameters:
          AzureDevOpsEnvironment: Ess-iat
          ShortName: iat
          DeployApim: ${{ parameters.DeployApim }}
          ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
          ContainerImage: ${{ variables.Container }}
